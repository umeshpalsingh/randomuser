{"version":3,"sources":["ProfileCard.js","App.js","reportWebVitals.js","index.js"],"names":["ProfileCard","details","Card","className","CardBody","height","width","src","picture","large","CardTitle","name","title","first","last","CardText","location","city","state","country","phone","email","dob","age","App","useState","setDetails","fetchDetails","a","Axios","get","data","console","log","results","useEffect","Container","fluid","Row","Col","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWA6BeA,EAzBK,SAAC,GAAe,IAAD,gBAAbC,EAAa,EAAbA,QAClB,OACI,cAACC,EAAA,EAAD,CAAMC,UAAU,OAAhB,SACI,eAACC,EAAA,EAAD,CAAUD,UAAU,cAApB,UACI,qBAAKE,OAAO,MAAMC,MAAM,MACxBH,UAAU,gDACVI,IAAG,UAAEN,EAAQO,eAAV,aAAE,EAAiBC,QACtB,cAACC,EAAA,EAAD,CAAWP,UAAU,aAArB,SACA,+BACI,sBAAMA,UAAU,OAAhB,mBAAwBF,EAAQU,YAAhC,aAAwB,EAAcC,QACtC,sBAAMT,UAAU,OAAhB,mBAAwBF,EAAQU,YAAhC,aAAwB,EAAcE,QACtC,sBAAMV,UAAU,OAAhB,mBAAwBF,EAAQU,YAAhC,aAAwB,EAAcG,YAG1C,eAACC,EAAA,EAAD,WACI,8BAAG,cAAC,IAAD,CAAgBZ,UAAU,SAA7B,UAAuCF,EAAQe,gBAA/C,aAAuC,EAAkBC,KAAzD,eAAiEhB,EAAQe,gBAAzE,aAAiE,EAAkBE,MAAnF,eAA4FjB,EAAQe,gBAApG,aAA4F,EAAkBG,WAC9G,8BAAG,cAAC,IAAD,CAAYhB,UAAU,SAASF,EAAQmB,SAC1C,8BAAG,cAAC,IAAD,CAAYjB,UAAU,SAASF,EAAQoB,SAC1C,+CAAQpB,EAAQqB,WAAhB,aAAQ,EAAaC,gBCY1BC,MA3Bf,WAEE,MAA8BC,mBAAS,IAAvC,mBAAOxB,EAAP,KAAgByB,EAAhB,KAEMC,EAAY,uCAAG,gCAAAC,EAAA,sEACEC,IAAMC,IAAI,8BADZ,gBACZC,EADY,EACZA,KACPC,QAAQC,IAAI,YAAaF,EAAKG,SACxBjC,EAAU8B,EAAKG,QAAQ,GAC7BR,EAAWzB,GAJQ,2CAAH,qDAWlB,OAJAkC,qBAAU,WACRR,MACC,IAGD,eAACS,EAAA,EAAD,CAAWC,OAAK,EAAClC,UAAU,UAA3B,UACA,oBAAIA,UAAU,yBAAd,mCACE,cAACmC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGrC,UAAU,mBAAtB,SACE,cAAC,EAAD,CAAaF,QAASA,YCfjBwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5f4d8a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card, CardBody, CardTitle, CardText} from \"reactstrap\";\r\nimport {FaMapMarkedAlt, FaEnvelope, FaPhoneAlt} from \"react-icons/fa\";\r\n\r\nconst ProfileCard = ({details}) => {\r\n    return (\r\n        <Card className=\"card\">\r\n            <CardBody className=\"text-center\">\r\n                <img height=\"150\" width=\"150\" \r\n                className=\"rounded-circle img-thumbnail border-secondary\"\r\n                src={details.picture?.large} />\r\n                <CardTitle className=\"text-light\">\r\n                <h2>\r\n                    <span className=\"me-2\">{details.name?.title}</span>\r\n                    <span className=\"me-2\">{details.name?.first}</span>\r\n                    <span className=\"me-2\">{details.name?.last}</span>\r\n                </h2>\r\n                </CardTitle>\r\n                <CardText>\r\n                    <p><FaMapMarkedAlt className=\"me-2\" />{details.location?.city}, {details.location?.state}, {details.location?.country}</p>\r\n                    <p><FaPhoneAlt className=\"me-2\"/>{details.phone}</p>\r\n                    <p><FaEnvelope className=\"me-2\"/>{details.email}</p>\r\n                    <p>Age {details.dob?.age}</p>\r\n                </CardText>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ProfileCard;","import React, {useState, useEffect} from 'react';\nimport { Container, Row, Col} from 'reactstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport Axios from 'axios';\nimport ProfileCard from './ProfileCard'\n\nfunction App() {\n\n  const [details, setDetails] = useState({});\n\n  const fetchDetails = async () => {\n    const {data} = await Axios.get(\"https://randomuser.me/api/\");\n    console.log(\"Response:\", data.results);\n    const details = data.results[0];\n    setDetails(details);\n  };\n\n  useEffect(() => {\n    fetchDetails();\n  }, []);\n\n  return (\n    <Container fluid className=\"p-4 App\">\n    <h1 className=\"text-center text-light\">RANDOM USER GENERATOR</h1>\n      <Row>\n        <Col md={4} className=\"offset-md-4 mt-4\">\n          <ProfileCard details={details} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}